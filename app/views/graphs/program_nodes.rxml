@title = "Interaction Graph for #{@program.program_title}"
@title += " (#{session[:years].starting} - #{session[:years].ending})" unless session[:years].show_all?

investigator_nodes = assignPositions(@investigators)
xml.chart(:caption => @title, :lineThickness=>'1', :showValues=>'1', :showFormBtn=>'0', :xAxisMinValue=>'0', :xAxisMaxValue=>'100', 
  :yAxisMinValue=>'0', :yAxisMaxValue=>'100', :is3D=>'1', :animation=>'1', :palette=>'2', :formAction=>'/graphs/list', :formMethod=>'POST',  :enableLink=>'1'  ) do
    # clickURL works: :clickURL => url_for(:controller=>'abstracts',:action=>'program_listing', :program_id => params[:program_id])
  xml.dataSet(:seriesName => "Investigator") do
    cnt=0
    investigator_nodes.internal.each do |investigator|
      x,y = calculateInternalPosition(investigator_nodes.internal.length,cnt)
      cnt+=1
      xml.set(:x=>x, :y=>y, :width=>'80', :height=>'30', :name=>investigator.first_name+' '+investigator.last_name, 
        :id=>investigator.id,
        :link => url_for(:controller=>'graphs',:action=>'member', :id => investigator.username),
        :color => 'AFD8F8',
        :tooltext => 'Publications:  '+investigator.abstracts.years(session[:years].starting, session[:years].ending).count.to_s+';
intra-programmatic collaborations:'+investigator.internal_collaborators.length.to_s+'; 
inter-programmatic collaborations:'+investigator.external_collaborators.length.to_s)
    end
  end
  xml.dataSet(:seriesName => "Faculty") do
    cnt=0
    investigator_nodes.external.each do |investigator|
      x,y = calculateExternalPosition(investigator_nodes.external.length,cnt)
      cnt+=1
      xml.set(:x=>x, :y=>y, :width=>'80', :height=>'30', :name=>investigator.first_name+' '+investigator.last_name, 
        :id=>investigator.id,
        :link => url_for(:controller=>'graphs',:action=>'member', :id => investigator.username),
        :color => 'AFD8F8',
        :tooltext => 'Publications:  '+investigator.abstracts.years(session[:years].starting, session[:years].ending).count.to_s+';
intra-programmatic collaborations:'+investigator.internal_collaborators.length.to_s+'; 
inter-programmatic collaborations:'+investigator.external_collaborators.length.to_s)
    end
  end
  
  xml.connectors(:stdThickness => "5", :color=>'BBBB00', :arrowAtStart=>'0', :arrowAtEnd=>'0' ) do
     investigator_nodes.internal.each do |investigator|
      investigator.internal_collaborators.keys.each do |collaborator|
       xml.connector(:strength=>investigator.internal_collaborators[collaborator].length.to_f/10, :label=>investigator.internal_collaborators[collaborator].length, :from=>investigator.id, :to=>collaborator, :color=>'AFD8F8', :arrowAtStart=>'0', :arrowAtEnd=>'0',
        :tooltext => 'connections:'+investigator.internal_collaborators[collaborator].length.to_s,
        :link => url_for(:controller=>'abstracts',:action=>'member', :id => investigator.username) )
      end
     end
   end
end
